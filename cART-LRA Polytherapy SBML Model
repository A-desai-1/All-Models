import tellurium as te
import matplotlib.pyplot as plt
import numpy as np

model = '''
  var LatentHIV, ActiveHIV, ReactivatedHIV

  k_infect_base = .00542
  k_infect_log = 0.02
  infection_max = 4.74 
  T_infect_mid = 1200

  k6= k_infect_base + (infection_max - k_infect_base) / (1 + exp(-k_infect_log * (time - T_infect_mid)))


  nat_deatha=  0.0125
  nat_deathl= 2.17e-5

  k_cART_base = 0.95
  k_cART_log = 0.014437
  cART_half_life = 48
  T_mid = 700

  k_cART_eff = k_cART_base / (1 + exp(-k_cART_log * (time - T_mid)))

  k_LRA =  0.002193

infection_spread = (ActiveHIV * k6 * (1 - k_cART_eff)) + (LatentHIV*k_LRA * k6* (1 - k_cART_eff))

  LatentHIV' = (infection_spread * 0.015) - (nat_deathl * LatentHIV) - (k_LRA * LatentHIV)

  ActiveHIV' = (infection_spread * 0.985)  - (nat_deatha* ActiveHIV) - ((k_cART_eff)*ActiveHIV)

  ReactivatedHIV' = (k_LRA * LatentHIV) - (nat_deatha* ReactivatedHIV)



  LatentHIV = 9.375e-4
  ActiveHIV = 0.0615625
  ReactivatedHIV = 0
  HealthyCells = 2.8855e-4  
'''

r = te.loada(model)
result = r.simulate(0, 4380, 1000)

time = result[:, 0]
latent_hiv = result[:, 1]
active_hiv = result[:, 2]
reactivated_hiv = result[:, 3]
dead_cells = result[:, 4]
healthy_cells = result[:, 5]

plt.figure(figsize=(12, 7))
plt.plot(time, latent_hiv, label="Latent HIV Cells", linewidth=2)
plt.plot(time, active_hiv, label="Active HIV Cells", linewidth=2)
plt.plot(time, reactivated_hiv, label="Reactivated HIV Cells", linewidth=2, linestyle='dashed')

plt.xlabel('Time (hours)')
plt.ylabel('Concentration (µM)')
plt.legend()
plt.grid(True)
plt.title('HIV Population Dynamics with Latency Reactivation')
plt.show()


print(f"Final Latent HIV Cells: {latent_hiv[-1]:.8f} µM")
print(f"Final Active HIV Cells: {active_hiv[-1]:.8f} µM")
print(f"Final Reactivated HIV Cells: {reactivated_hiv[-1]:.8f} µM")

